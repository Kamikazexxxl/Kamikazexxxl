import java.io.IOException;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        String inputString = ExeptionFinder.isToFind(sc.nextLine());
        String outputString = ArgsOperDefiner.converter(inputString);
        System.out.println("\"" + outputString + "\"");
    }
}

class ArgsOperDefiner {

    public static String converter(String inputString) {


        String[] arguments = argumendDefiner(inputString);
        String argOne = arguments[0];
        String argTwo = arguments[1];
        char operator = inputString.charAt(argOne.length() + 3);
        String answer = Calculation.calculate(argOne, argTwo, operator);
        if (answer.length() >= 40) answer = (answer.substring(0, 40) + "...");
        return answer;
    }

    public static String[] argumendDefiner(String inputString) {
        String[] array = inputString.split(" \\W ");
        int inputLenght = inputString.length();
        int argOneLenght = array[0].length();
        String firstArgument = inputString.substring(1, argOneLenght - 1);
        String secondArgument = array[1];

        if (array[1].length() > 2)
            secondArgument = inputString.substring(argOneLenght + 4, inputLenght - 1);

        return new String[]{firstArgument, secondArgument};
    }

}

class Calculation {
    public static String calculate(String argOne, String argTwo, char operator) {
        switch (operator) {
            case '+':
                return argOne + argTwo;
            case '-':
                return argOne.replace(argTwo, "");
            case '*':
                return argOne.repeat(Integer.parseInt(argTwo));
            case '/':
                return argOne.substring(0, argOne.length() / Integer.parseInt(argTwo));
        }
        return null;
    }

}

class ExeptionFinder {

    public static String isToFind(String inputString) throws IOException {
        String[] array = inputString.split(" \\W ");
        int x = array[0].length();
        int y = array[1].length();

        if (x > 12 || y > 12) throw new IOException("Исключение");

        if (inputString.contains("/") && inputString.contains("*") && array[1].contains("\""))
            throw new IOException("Исключение");                    //"Умножать и делить на строку нельзя"

        if (!array[1].contains("\"") && inputString.contains("+") && inputString.contains("-"))
            throw new IOException("Исключение");                     //"Прибавлять или вычитать из строки нельзя"

        if (!array[1].contains("\"") && Integer.parseInt(array[1]) > 10)
            throw new IOException("Исключение");                    //("числа от 1 до 10 включительно, не более.")
        if (!array[1].contains("\"") && Integer.parseInt(array[1]) < 1)
            throw new IOException("Исключение");

        if (!array[0].contains("\""))
            throw new IOException("Исключение");                    //первый аргумент должен быть цифрой

        return inputString;

    }
}
